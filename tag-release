#!/bin/bash

declare tag="${1:-not_set}"
declare title="${2:-not_set}"

if [[ ! ${tag} =~ ^v[[:digit:]]+[.][[:digit:]]+[.][[:digit:]]+$ ]]; then
	printf "ERROR: tag [%s] doesn't match the format \"%s\"\n" "${tag}" "^v[[:digit:]]+[.][[:digit:]]+[.][[:digit:]]+$"
	exit 1
fi

if [[ ${title} == not_set ]]; then
	printf "ERROR: message is missing\n"
	printf "\n"
	printf "Usage: %s tag title\n" "$0"
	printf "\n"
	exit 1
fi

declare message_rel
declare message_tag

message_tag="$(./scripts/git-release-notes "release-short" "${tag} - ${title}")"

message_rel="$(echo "${message_tag}" | sed -r -e 's/^release: v[[:digit:]]+[.][[:digit:]]+[.][[:digit:]]+ - //g')"

if ./scripts/go-generate-helper-git-version-info "${tag}" "${message_rel}"; then

	if ! git log --pretty=format:'- %s' --abbrev-commit --decorate -n 1 | grep -q "[-] release:"; then
		printf "ERROR: Failed to create release commit\n"
		exit 1
	fi

	# We can update the release notes after the release commit is created.
	./scripts/git-release-notes "release-full:${tag}" "${title}" > CHANGELOG.md
	git add CHANGELOG.md || exit 1

	if git commit -v --amend; then
		# For some weird reason, the tag commit message ommits lines starting with '#'.
		git tag -s -a -m "${message_tag//### /}" "${tag}"
	fi

else

	printf "ERROR: error encounterd in go-generate-helper-git-version-info script\n"
	exit 1

fi
