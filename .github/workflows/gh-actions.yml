name: GitHub Action Workflow

on:
  pull_request:

env:
  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  stage1:
    name: Change Check

    runs-on: 'ubuntu-latest'

    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Get Change List
      id: check_file_changed
      shell: pwsh
      run: |
        # https://www.meziantou.net/executing-github-actions-jobs-or-steps-only-when-specific-files-change.htm#conditional-jobs

        # Diff HEAD with the previous commit then output to stdout.
        echo "=== Which files changed? ===" | Out-String -Stream
        ([string[]] $diff = git diff --name-only HEAD^ HEAD)

        # Check if the files are present in the changed file list (added, modified, deleted) then output to stdout.
        echo "=== Which GitHub Workflow/Action files changed? ===" | Out-String -Stream
        ([string[]] $SourceDiff = $diff | Where-Object { $_ -match '^.github/workflows/.*[.]yml$' })

        # Did GitHub Workflow/Action files change?
        echo "=== Did GitHub Workflow/Action files change? ===" | Out-String -Stream
        ([string[]] $HasDiff = $SourceDiff.Length -gt 0)

        # Set the output named "docs_changed"
        Write-Host "::set-output name=docs_changed::$HasDiff"

  stage2:
    name: GitHub Action Checks
    strategy:
      matrix:
        os: ["ubuntu-latest"]

    runs-on: "${{ matrix.os }}"

    needs: [ stage1 ]
    if: needs.stage1.outputs.docs_changed == 'True'

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Set up Go (using version from go.mod)
      id: setup-go
      uses: actions/setup-go@v3
      with:
        go-version-file: './go.mod'

    - name: Show Go version
      id: go-version-check
      shell: bash
      run: |
        go version

    - name: Install Tools
      id: install-tools
      shell: bash
      run: |
        go install github.com/reviewdog/reviewdog/cmd/reviewdog@latest
        go install github.com/rhysd/actionlint/cmd/actionlint@latest
        sudo apt install -y shellcheck

    - name: Reviewdog Version Checks
      id: version-check-reviewdog
      shell: bash
      run: |
        reviewdog --version

    - name: Actionlint Version Checks
      id: version-check-actionlint
      shell: bash
      run: |
        actionlint --version

    - name: Analysing the code with golint
      id: actionlint
      shell: bash
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        for f in ./.github/workflows/*yml; do
          printf "Running: actionlint %s\n" "${f}"
          tee /tmp/actionlint.out < <(actionlint "${f}")
          reviewdog -efm="%f:%l:%c: %m" -name="actionlint" -reporter=github-pr-check < /tmp/actionlint.out
        done
