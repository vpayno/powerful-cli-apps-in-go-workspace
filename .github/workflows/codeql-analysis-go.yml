#
# .github/workflows/codeql-analysis.yml
#
name: "CodeQL Workflow"

on:
  push:
    branches: [ "main" ]

  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

  schedule:
    - cron: '15 08 * * 6'

jobs:
  stage1-setup:
    name: Change Check

    runs-on: 'ubuntu-latest'

    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Get Change List
      id: check_file_changed
      shell: pwsh
      run: |
        # https://www.meziantou.net/executing-github-actions-jobs-or-steps-only-when-specific-files-change.htm#conditional-jobs

        # Diff HEAD with the previous commit then output to stdout.
        echo "=== Which files changed? ===" | Out-String -Stream
        ([string[]] $diff = git diff --name-only HEAD^ HEAD)

        # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted) then output to stdout.
        echo "=== Which Golang files changed? ===" | Out-String -Stream
        ([string[]] $SourceDiff = $diff | Where-Object { $_ -match '^.*[.]go$' -or $_ -match '^go[.]sum$' -or $_ -match '^go[.]mod$' })

        # Did Golang files change?
        echo "=== Did Golang files change? ===" | Out-String -Stream
        ([string[]] $HasDiff = $SourceDiff.Length -gt 0)

        # Set the output named "docs_changed"
        Write-Host "::set-output name=docs_changed::$HasDiff"

  stage2-analyze:
    name: CodeQL Analyze

    runs-on: ubuntu-latest

    needs: [ stage1-setup ]
    if: needs.stage1-setup.outputs.docs_changed == 'True'

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        go-version: ["1.19"]
        language: [ 'go' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    # Adding this because the image as a dead version of Go.
    - name: Set up Go ${{ matrix.go-version }}
      id: setup-go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install Dependencies
      run: |
        go version
        go install github.com/goreleaser/goreleaser@latest

    - name: Manual Build
      run: |
        echo "Run, Build Application using script"
        goreleaser build --rm-dist --single-target --snapshot

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
