#
# .github/workflows/fossa.yml
#
name: "FOSSA Check"

env:
  FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}

on:
  pull_request:

jobs:
  stage1-setup:
    name: Change Check

    runs-on: 'ubuntu-latest'

    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Get Change List
      id: check_file_changed
      shell: bash
      run: |
        # Diff HEAD with the previous commit then output to stdout.
        printf "=== Which files changed? ===\n"
        GIT_DIFF="$(git diff --name-only HEAD^ HEAD)"
        printf "%s\n" "${GIT_DIFF}"
        printf "\n"

        # Check if the files are present in the changed file list (added, modified, deleted) then output to stdout.
        HAS_DIFF=false
        printf "=== Which Golang files changed? ===\n"
        if printf "%s\n" "${GIT_DIFF}" | grep -E '^(LICENSE|go[.](mod|sum)|.github/workflows/fossa-go.yml)$'; then
          HAS_DIFF=true
        fi
        printf "\n"

        # Did Golang files change?
        printf "=== Did Golang files change? ===\n"
        printf "%s\n" "${HAS_DIFF}"
        printf "\n"

        # Set the output named "docs_changed"
        printf "%s=%s\n" "docs_changed" "${HAS_DIFF}" >> "${GITHUB_OUTPUT}"

  stage2-analyze:
    name: FOSSA Analyze

    runs-on: ubuntu-latest

    needs: [ stage1-setup ]
    if: needs.stage1-setup.outputs.docs_changed == 'True'

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Install Dependencies
      run: |
        curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash

    - name: Run FOSSA Check
      run: |
        fossa analyze
