#
# .github/workflows/markdown.yml
#

# https://github.com/actions/setup-node
# https://github.com/igorshubovych/markdownlint-cli
---

name: Markdown Workflow

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - develop

  pull_request:

env:
  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

defaults:
  run:
    shell: bash

jobs:
  stage1:
    name: Change Check

    runs-on: 'ubuntu-latest'

    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}

    steps:
      - name: Checkout Repo
        id: checkout-repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Get Change List
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit then output to stdout.
          printf "=== Which files changed? ===\n"
          GIT_DIFF="$(git diff --name-only HEAD^ HEAD)"
          printf "%s\n" "${GIT_DIFF}"
          printf "\n"

          # Check if the files are present in the changed file list (added, modified, deleted) then output to stdout.
          HAS_DIFF=false
          printf "=== Which Markdown files changed? ===\n"
          if printf "%s\n" "${GIT_DIFF}" | grep -E '^(.*[.]md|.github/workflows/markdown.yml|.markdownlintrc)$'; then
            HAS_DIFF=true
          fi
          printf "\n"

          # Did Golang files change?
          printf "=== Did Markdown files change? ===\n"
          printf "%s\n" "${HAS_DIFF}"
          printf "\n"

          # Set the output named "docs_changed"
          printf "%s=%s\n" "docs_changed" "${HAS_DIFF}" >> "${GITHUB_OUTPUT}"

  stage2:
    name: markdownlint

    runs-on: ubuntu-latest

    needs:
      - stage1
    if: needs.stage1.outputs.docs_changed == 'True'

    steps:
      - name: Git Checkout
        id: checkout-repo
        uses: actions/checkout@v3

      - name: Install Node
        id: install-node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Set up Go (using version in go.mod)
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'

      - name: Check Node Version
        id: npm-version-check
        run: |
          npm --version

      - name: Install ReviewDog
        id: install-reviewdog
        run: |
          go install github.com/reviewdog/reviewdog/cmd/reviewdog@latest

      - name: Install markdownlint
        id: install-markdownlint
        run: |
          npm install -g markdownlint-cli
          printf "\n"
          markdownlint -h

      - name: markdownlint with reviewdog
        id: run-markdownlint
        run: |
          # CHANGELOG.md:5:1 MD033/no-inline-html Inline HTML [Element: h2]
          # CHANGELOG.md:9 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h2; Actual: h3]
          markdownlint --ignore ./pages-gh . | sed -r -e 's/^(.*[.]md:[0-9]+) (.*)$/\1:1 \2/g' | reviewdog -tee -efm="%f:%l:%c: %m" -name="markdownlint" -reporter=github-check
