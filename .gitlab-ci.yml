---
#
# .gitlab-ci.yml
#
# https://docs.dagger.io/cookbook/#gitlab-ci
# https://hub.docker.com/_/golang/tags?page=1&name=alpine
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - when: never

stages:
  - lint
  - test
  - build
  - release

.docker:
  image: golang:1-alpine
  services:
    - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: '1'
    DOCKER_TLS_CERTDIR: '/certs'
    DOCKER_CERT_PATH: '/certs/client'
    DOCKER_DRIVER: overlay2
    DOCKER_VERSION: '20.10.16'

.dagger:
  extends: [.docker]
  before_script:
    - apk add docker-cli curl bash
    - ./scripts/dagger-install-cli

lint:
  extends: [.dagger]
  stage: lint
  script:
    - ./scripts/dagger-run-lint

test:
  extends: [.dagger]
  stage: test
  script:
    - ./scripts/dagger-run-test

build:
  extends: [.dagger]
  stage: build
  script:
    - ./scripts/dagger-run-build
    - apk add git zip
    - ./scripts/create-release-files
    - printf "%s=%s\n" "BUILD_JOB_ID" "${CI_JOB_ID}" | tee -a DOTENV.env
    - printf "%s=%s\n" "RELEASE_BODY" "$(cat release/release_body.md)" | tee -a DOTENV.env
  artifacts:
    expire_in: 1 week
    paths:
      - ./release
    reports:
      dotenv: DOTENV.env

.release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest

release:
  extends: [.release]
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build
      artifacts: true
  script:
    - echo "Releasing tag ${CI_COMMIT_TAG}"
    - echo "Using artifacts from ${BUILD_JOB_ID}"
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: '$RELEASE_BODY'
    assets:
      links:
        - name: 'releases.tar.gz'
          url: '${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/release/releases.tar.gz'
        - name: 'releases.zip'
          url: '${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/release/releases.zip'
  artifacts:
    paths:
      - ./release
